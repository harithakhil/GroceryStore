<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="37" passed="33" failed="4" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-01-04T17:48:26 IST" name="My Extent Report Suite" finished-at="2023-01-04T18:00:26 IST" duration-ms="720376">
    <groups>
      <group name="SmokeTest">
        <method signature="ManageDeliveryBoyTestCase.verifyToolTip()[pri:1, instance:testCases.ManageDeliveryBoyTestCase@31c88ec8]" name="verifyToolTip" class="testCases.ManageDeliveryBoyTestCase"/>
        <method signature="ManageOrdersTestCase.verifyTheSearchOfExistingOrder()[pri:0, instance:testCases.ManageOrdersTestCase@3daa422a]" name="verifyTheSearchOfExistingOrder" class="testCases.ManageOrdersTestCase"/>
      </group> <!-- SmokeTest -->
    </groups>
    <test started-at="2023-01-04T17:48:26 IST" name="MyTestName" finished-at="2023-01-04T18:00:26 IST" duration-ms="720376">
      <class name="testCases.MobileSliderTestCase">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.MobileSliderTestCase@27ce24aa]" started-at="2023-01-04T17:57:50 IST" name="beforeMethod" finished-at="2023-01-04T17:57:53 IST" duration-ms="2442" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyFirstImageIsDisplayedOrNot()[pri:0, instance:testCases.MobileSliderTestCase@27ce24aa]" started-at="2023-01-04T17:57:53 IST" name="verifyFirstImageIsDisplayedOrNot" finished-at="2023-01-04T17:57:55 IST" duration-ms="2449" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFirstImageIsDisplayedOrNot -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.MobileSliderTestCase@27ce24aa]" started-at="2023-01-04T17:57:55 IST" name="afterMethod" finished-at="2023-01-04T17:58:11 IST" duration-ms="16247" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFirstImageIsDisplayedOrNot status=SUCCESS method=MobileSliderTestCase.verifyFirstImageIsDisplayedOrNot()[pri:0, instance:testCases.MobileSliderTestCase@27ce24aa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.MobileSliderTestCase@27ce24aa]" started-at="2023-01-04T17:58:11 IST" name="beforeMethod" finished-at="2023-01-04T17:58:13 IST" duration-ms="2019" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyFirstImageStatusIsActiveOrNot()[pri:0, instance:testCases.MobileSliderTestCase@27ce24aa]" started-at="2023-01-04T17:58:13 IST" name="verifyFirstImageStatusIsActiveOrNot" finished-at="2023-01-04T17:58:16 IST" duration-ms="2160" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFirstImageStatusIsActiveOrNot -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.MobileSliderTestCase@27ce24aa]" started-at="2023-01-04T17:58:16 IST" name="afterMethod" finished-at="2023-01-04T17:58:16 IST" duration-ms="72" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFirstImageStatusIsActiveOrNot status=SUCCESS method=MobileSliderTestCase.verifyFirstImageStatusIsActiveOrNot()[pri:0, instance:testCases.MobileSliderTestCase@27ce24aa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.MobileSliderTestCase@27ce24aa]" started-at="2023-01-04T17:58:16 IST" name="beforeMethod" finished-at="2023-01-04T17:58:18 IST" duration-ms="2009" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTextOfMobileSlider()[pri:0, instance:testCases.MobileSliderTestCase@27ce24aa]" started-at="2023-01-04T17:58:18 IST" name="verifyTextOfMobileSlider" finished-at="2023-01-04T17:58:18 IST" duration-ms="764" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTextOfMobileSlider -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.MobileSliderTestCase@27ce24aa]" started-at="2023-01-04T17:58:18 IST" name="afterMethod" finished-at="2023-01-04T17:58:19 IST" duration-ms="70" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTextOfMobileSlider status=SUCCESS method=MobileSliderTestCase.verifyTextOfMobileSlider()[pri:0, instance:testCases.MobileSliderTestCase@27ce24aa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testCases.MobileSliderTestCase -->
      <class name="testCases.ManageLocationTestCase">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.ManageLocationTestCase@1cbbffcd]" started-at="2023-01-04T17:57:08 IST" name="beforeMethod" finished-at="2023-01-04T17:57:11 IST" duration-ms="2963" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheCountOfActiveStatus()[pri:0, instance:testCases.ManageLocationTestCase@1cbbffcd]" started-at="2023-01-04T17:57:11 IST" name="verifyTheCountOfActiveStatus" finished-at="2023-01-04T17:57:13 IST" duration-ms="1794" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheCountOfActiveStatus -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManageLocationTestCase@1cbbffcd]" started-at="2023-01-04T17:57:13 IST" name="afterMethod" finished-at="2023-01-04T17:57:29 IST" duration-ms="16240" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheCountOfActiveStatus status=SUCCESS method=ManageLocationTestCase.verifyTheCountOfActiveStatus()[pri:0, instance:testCases.ManageLocationTestCase@1cbbffcd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.ManageLocationTestCase@1cbbffcd]" started-at="2023-01-04T17:57:29 IST" name="beforeMethod" finished-at="2023-01-04T17:57:31 IST" duration-ms="2639" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheSelectedValueIsBelfast()[pri:0, instance:testCases.ManageLocationTestCase@1cbbffcd]" started-at="2023-01-04T17:57:31 IST" name="verifyTheSelectedValueIsBelfast" finished-at="2023-01-04T17:57:34 IST" duration-ms="2606" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheSelectedValueIsBelfast -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManageLocationTestCase@1cbbffcd]" started-at="2023-01-04T17:57:34 IST" name="afterMethod" finished-at="2023-01-04T17:57:50 IST" duration-ms="16267" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheSelectedValueIsBelfast status=SUCCESS method=ManageLocationTestCase.verifyTheSelectedValueIsBelfast()[pri:0, instance:testCases.ManageLocationTestCase@1cbbffcd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testCases.ManageLocationTestCase -->
      <class name="testCases.ManageProductTestCase">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.ManageProductTestCase@72f926e6]" started-at="2023-01-04T17:52:12 IST" name="beforeMethod" finished-at="2023-01-04T17:52:14 IST" duration-ms="1852" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyAddNewProduct()[pri:0, instance:testCases.ManageProductTestCase@72f926e6]" started-at="2023-01-04T17:52:14 IST" name="verifyAddNewProduct" finished-at="2023-01-04T17:52:22 IST" duration-ms="8627" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAddNewProduct -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManageProductTestCase@72f926e6]" started-at="2023-01-04T17:52:22 IST" name="afterMethod" finished-at="2023-01-04T17:52:39 IST" duration-ms="16284" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAddNewProduct status=SUCCESS method=ManageProductTestCase.verifyAddNewProduct()[pri:0, instance:testCases.ManageProductTestCase@72f926e6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.ManageProductTestCase@72f926e6]" started-at="2023-01-04T17:52:39 IST" name="beforeMethod" finished-at="2023-01-04T17:52:40 IST" duration-ms="1808" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyImageUpload()[pri:0, instance:testCases.ManageProductTestCase@72f926e6]" started-at="2023-01-04T17:52:40 IST" name="verifyImageUpload" finished-at="2023-01-04T17:52:46 IST" duration-ms="5331" status="FAIL">
          <exception class="org.openqa.selenium.interactions.MoveTargetOutOfBoundsException">
            <message>
              <![CDATA[move target out of bounds
  (Session info: chrome=108.0.5359.125)
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'DESKTOP-SMGNKPT', ip: '192.168.1.100', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '19.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [4b9fd38606952f3ed3ecccc856be8232, actions {actions=[org.openqa.selenium.interactions.Sequence@65a48cab]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\harit\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:10846}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:10846/devtoo..., se:cdpVersion: 108.0.5359.125, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 4b9fd38606952f3ed3ecccc856be8232]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.interactions.MoveTargetOutOfBoundsException: move target out of bounds
  (Session info: chrome=108.0.5359.125)
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'DESKTOP-SMGNKPT', ip: '192.168.1.100', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '19.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [4b9fd38606952f3ed3ecccc856be8232, actions {actions=[org.openqa.selenium.interactions.Sequence@65a48cab]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\harit\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:10846}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:10846/devtoo..., se:cdpVersion: 108.0.5359.125, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 4b9fd38606952f3ed3ecccc856be8232
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:547)
at org.openqa.selenium.remote.RemoteWebDriver.perform(RemoteWebDriver.java:615)
at org.openqa.selenium.interactions.Actions$BuiltAction.perform(Actions.java:567)
at org.openqa.selenium.interactions.Actions.perform(Actions.java:536)
at utilities.FileHandling.fileUpload(FileHandling.java:20)
at elementRepository.ManageProductPage.validateImageUpload(ManageProductPage.java:179)
at testCases.ManageProductTestCase.verifyImageUpload(ManageProductTestCase.java:50)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.interactions.MoveTargetOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyImageUpload -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManageProductTestCase@72f926e6]" started-at="2023-01-04T17:52:46 IST" name="afterMethod" finished-at="2023-01-04T17:53:02 IST" duration-ms="16391" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyImageUpload status=FAILURE method=ManageProductTestCase.verifyImageUpload()[pri:0, instance:testCases.ManageProductTestCase@72f926e6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.ManageProductTestCase@72f926e6]" started-at="2023-01-04T17:53:02 IST" name="beforeMethod" finished-at="2023-01-04T17:53:04 IST" duration-ms="2335" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyVegIsSelectedInProductType()[pri:0, instance:testCases.ManageProductTestCase@72f926e6]" started-at="2023-01-04T17:53:04 IST" name="verifyVegIsSelectedInProductType" finished-at="2023-01-04T17:53:10 IST" duration-ms="5434" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyVegIsSelectedInProductType -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManageProductTestCase@72f926e6]" started-at="2023-01-04T17:53:10 IST" name="afterMethod" finished-at="2023-01-04T17:53:26 IST" duration-ms="16286" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyVegIsSelectedInProductType status=SUCCESS method=ManageProductTestCase.verifyVegIsSelectedInProductType()[pri:0, instance:testCases.ManageProductTestCase@72f926e6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.ManageProductTestCase@72f926e6]" started-at="2023-01-04T17:53:26 IST" name="beforeMethod" finished-at="2023-01-04T17:53:28 IST" duration-ms="1770" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyYesIsSelectedInStock()[pri:0, instance:testCases.ManageProductTestCase@72f926e6]" started-at="2023-01-04T17:53:28 IST" name="verifyYesIsSelectedInStock" finished-at="2023-01-04T17:53:31 IST" duration-ms="3093" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyYesIsSelectedInStock -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManageProductTestCase@72f926e6]" started-at="2023-01-04T17:53:31 IST" name="afterMethod" finished-at="2023-01-04T17:53:47 IST" duration-ms="16259" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyYesIsSelectedInStock status=SUCCESS method=ManageProductTestCase.verifyYesIsSelectedInStock()[pri:0, instance:testCases.ManageProductTestCase@72f926e6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testCases.ManageProductTestCase -->
      <class name="testCases.LoginTestCase">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.LoginTestCase@2145b572]" started-at="2023-01-04T17:48:26 IST" name="beforeMethod" finished-at="2023-01-04T17:48:29 IST" duration-ms="3297" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="excelRead()[pri:0, instance:testCases.LoginTestCase@2145b572]" started-at="2023-01-04T17:48:29 IST" name="excelRead" description="login by using excel read" finished-at="2023-01-04T17:48:31 IST" duration-ms="1560" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- excelRead -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.LoginTestCase@2145b572]" started-at="2023-01-04T17:48:31 IST" name="afterMethod" finished-at="2023-01-04T17:48:47 IST" duration-ms="16274" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=excelRead status=SUCCESS method=LoginTestCase.excelRead()[pri:0, instance:testCases.LoginTestCase@2145b572] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.LoginTestCase@2145b572]" started-at="2023-01-04T17:48:47 IST" name="beforeMethod" finished-at="2023-01-04T17:48:49 IST" duration-ms="2313" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="profileStyleValidation()[pri:0, instance:testCases.LoginTestCase@2145b572]" started-at="2023-01-04T17:48:49 IST" name="profileStyleValidation" finished-at="2023-01-04T17:48:50 IST" duration-ms="643" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- profileStyleValidation -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.LoginTestCase@2145b572]" started-at="2023-01-04T17:48:50 IST" name="afterMethod" finished-at="2023-01-04T17:49:06 IST" duration-ms="16271" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=profileStyleValidation status=SUCCESS method=LoginTestCase.profileStyleValidation()[pri:0, instance:testCases.LoginTestCase@2145b572] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.LoginTestCase@2145b572]" started-at="2023-01-04T17:49:06 IST" name="beforeMethod" finished-at="2023-01-04T17:49:09 IST" duration-ms="2685" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyLoggedUser()[pri:0, instance:testCases.LoginTestCase@2145b572]" started-at="2023-01-04T17:49:09 IST" name="verifyLoggedUser" finished-at="2023-01-04T17:49:10 IST" duration-ms="926" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoggedUser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.LoginTestCase@2145b572]" started-at="2023-01-04T17:49:10 IST" name="afterMethod" finished-at="2023-01-04T17:49:26 IST" duration-ms="16251" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoggedUser status=SUCCESS method=LoginTestCase.verifyLoggedUser()[pri:0, instance:testCases.LoginTestCase@2145b572] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.LoginTestCase@2145b572]" started-at="2023-01-04T17:49:26 IST" name="beforeMethod" finished-at="2023-01-04T17:49:28 IST" duration-ms="2111" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyLoggedUser(java.lang.String, java.lang.String)[pri:0, instance:testCases.LoginTestCase@2145b572]" started-at="2023-01-04T17:49:28 IST" name="verifyLoggedUser" description="Login using data provider" data-provider="data" finished-at="2023-01-04T17:49:29 IST" duration-ms="906" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoggedUser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.LoginTestCase@2145b572]" started-at="2023-01-04T17:49:29 IST" name="afterMethod" finished-at="2023-01-04T17:49:45 IST" duration-ms="16246" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoggedUser status=SUCCESS method=LoginTestCase.verifyLoggedUser(java.lang.String, java.lang.String)[pri:0, instance:testCases.LoginTestCase@2145b572] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.LoginTestCase@2145b572]" started-at="2023-01-04T17:49:45 IST" name="beforeMethod" finished-at="2023-01-04T17:49:47 IST" duration-ms="2084" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyLoggedUser(java.lang.String, java.lang.String)[pri:0, instance:testCases.LoginTestCase@2145b572]" started-at="2023-01-04T17:49:47 IST" name="verifyLoggedUser" description="Login using data provider" data-provider="data" finished-at="2023-01-04T17:49:58 IST" duration-ms="10589" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//a[@data-toggle='dropdown']"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'DESKTOP-SMGNKPT', ip: '192.168.1.100', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '19.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [10aebc44d3a0c34784870013280aadeb, findElement {using=xpath, value=//a[@data-toggle='dropdown']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\harit\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:10602}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:10602/devtoo..., se:cdpVersion: 108.0.5359.125, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 10aebc44d3a0c34784870013280aadeb]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//a[@data-toggle='dropdown']"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'DESKTOP-SMGNKPT', ip: '192.168.1.100', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '19.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [10aebc44d3a0c34784870013280aadeb, findElement {using=xpath, value=//a[@data-toggle='dropdown']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\harit\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:10602}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:10602/devtoo..., se:cdpVersion: 108.0.5359.125, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 10aebc44d3a0c34784870013280aadeb
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:547)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:365)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:357)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at jdk.proxy2/jdk.proxy2.$Proxy19.getText(Unknown Source)
at utilities.GeneralUtilities.getElementText(GeneralUtilities.java:17)
at elementRepository.LoginPage.profileVerification(LoginPage.java:60)
at testCases.LoginTestCase.verifyLoggedUser(LoginTestCase.java:45)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoggedUser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.LoginTestCase@2145b572]" started-at="2023-01-04T17:49:58 IST" name="afterMethod" finished-at="2023-01-04T17:50:14 IST" duration-ms="16386" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoggedUser status=FAILURE method=LoginTestCase.verifyLoggedUser(java.lang.String, java.lang.String)[pri:0, instance:testCases.LoginTestCase@2145b572] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.LoginTestCase@2145b572]" started-at="2023-01-04T17:50:14 IST" name="beforeMethod" finished-at="2023-01-04T17:50:17 IST" duration-ms="2838" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyLoggedUser(java.lang.String, java.lang.String)[pri:0, instance:testCases.LoginTestCase@2145b572]" started-at="2023-01-04T17:50:17 IST" name="verifyLoggedUser" description="Login using data provider" data-provider="data" finished-at="2023-01-04T17:50:28 IST" duration-ms="10721" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin4]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//a[@data-toggle='dropdown']"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'DESKTOP-SMGNKPT', ip: '192.168.1.100', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '19.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [0e04caadbf23563e2b3a8c52c318ff7c, findElement {using=xpath, value=//a[@data-toggle='dropdown']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\harit\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:10633}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:10633/devtoo..., se:cdpVersion: 108.0.5359.125, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 0e04caadbf23563e2b3a8c52c318ff7c]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//a[@data-toggle='dropdown']"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'DESKTOP-SMGNKPT', ip: '192.168.1.100', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '19.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [0e04caadbf23563e2b3a8c52c318ff7c, findElement {using=xpath, value=//a[@data-toggle='dropdown']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\harit\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:10633}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:10633/devtoo..., se:cdpVersion: 108.0.5359.125, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 0e04caadbf23563e2b3a8c52c318ff7c
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:547)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:365)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:357)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at jdk.proxy2/jdk.proxy2.$Proxy19.getText(Unknown Source)
at utilities.GeneralUtilities.getElementText(GeneralUtilities.java:17)
at elementRepository.LoginPage.profileVerification(LoginPage.java:60)
at testCases.LoginTestCase.verifyLoggedUser(LoginTestCase.java:45)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoggedUser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.LoginTestCase@2145b572]" started-at="2023-01-04T17:50:28 IST" name="afterMethod" finished-at="2023-01-04T17:50:44 IST" duration-ms="16390" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoggedUser status=FAILURE method=LoginTestCase.verifyLoggedUser(java.lang.String, java.lang.String)[pri:0, instance:testCases.LoginTestCase@2145b572] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.LoginTestCase@2145b572]" started-at="2023-01-04T17:50:44 IST" name="beforeMethod" finished-at="2023-01-04T17:50:46 IST" duration-ms="1736" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyLoggedUser(java.lang.String, java.lang.String)[pri:0, instance:testCases.LoginTestCase@2145b572]" started-at="2023-01-04T17:50:46 IST" name="verifyLoggedUser" description="Login using data provider" data-provider="data" finished-at="2023-01-04T17:50:56 IST" duration-ms="10391" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin2]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//a[@data-toggle='dropdown']"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'DESKTOP-SMGNKPT', ip: '192.168.1.100', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '19.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [57955502cbd9bf25a11df063c65828ce, findElement {using=xpath, value=//a[@data-toggle='dropdown']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\harit\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:10666}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:10666/devtoo..., se:cdpVersion: 108.0.5359.125, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 57955502cbd9bf25a11df063c65828ce]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//a[@data-toggle='dropdown']"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'DESKTOP-SMGNKPT', ip: '192.168.1.100', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '19.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [57955502cbd9bf25a11df063c65828ce, findElement {using=xpath, value=//a[@data-toggle='dropdown']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\harit\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:10666}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:10666/devtoo..., se:cdpVersion: 108.0.5359.125, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 57955502cbd9bf25a11df063c65828ce
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:547)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:365)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:357)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at jdk.proxy2/jdk.proxy2.$Proxy19.getText(Unknown Source)
at utilities.GeneralUtilities.getElementText(GeneralUtilities.java:17)
at elementRepository.LoginPage.profileVerification(LoginPage.java:60)
at testCases.LoginTestCase.verifyLoggedUser(LoginTestCase.java:45)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoggedUser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.LoginTestCase@2145b572]" started-at="2023-01-04T17:50:56 IST" name="afterMethod" finished-at="2023-01-04T17:51:13 IST" duration-ms="16361" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoggedUser status=FAILURE method=LoginTestCase.verifyLoggedUser(java.lang.String, java.lang.String)[pri:0, instance:testCases.LoginTestCase@2145b572] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.LoginTestCase@2145b572]" started-at="2023-01-04T17:51:13 IST" name="beforeMethod" finished-at="2023-01-04T17:51:15 IST" duration-ms="2217" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyRememberCheckBoxIsDisplayedOrNot()[pri:0, instance:testCases.LoginTestCase@2145b572]" started-at="2023-01-04T17:51:15 IST" name="verifyRememberCheckBoxIsDisplayedOrNot" finished-at="2023-01-04T17:51:15 IST" duration-ms="147" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRememberCheckBoxIsDisplayedOrNot -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.LoginTestCase@2145b572]" started-at="2023-01-04T17:51:15 IST" name="afterMethod" finished-at="2023-01-04T17:51:31 IST" duration-ms="16239" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRememberCheckBoxIsDisplayedOrNot status=SUCCESS method=LoginTestCase.verifyRememberCheckBoxIsDisplayedOrNot()[pri:0, instance:testCases.LoginTestCase@2145b572] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testCases.LoginTestCase -->
      <class name="testCases.ManageDeliveryBoyTestCase">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.ManageDeliveryBoyTestCase@31c88ec8]" started-at="2023-01-04T17:55:58 IST" name="beforeMethod" finished-at="2023-01-04T17:56:01 IST" duration-ms="2429" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyToolTip()[pri:1, instance:testCases.ManageDeliveryBoyTestCase@31c88ec8]" started-at="2023-01-04T17:56:01 IST" name="verifyToolTip" description="tool tip test case" finished-at="2023-01-04T17:56:05 IST" duration-ms="4245" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyToolTip -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManageDeliveryBoyTestCase@31c88ec8]" started-at="2023-01-04T17:56:05 IST" name="afterMethod" finished-at="2023-01-04T17:56:21 IST" duration-ms="16270" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyToolTip status=SUCCESS method=ManageDeliveryBoyTestCase.verifyToolTip()[pri:1, instance:testCases.ManageDeliveryBoyTestCase@31c88ec8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.ManageDeliveryBoyTestCase@31c88ec8]" started-at="2023-01-04T17:56:21 IST" name="beforeMethod" finished-at="2023-01-04T17:56:23 IST" duration-ms="1857" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyStylePropertyOfNewButton()[pri:2, instance:testCases.ManageDeliveryBoyTestCase@31c88ec8]" started-at="2023-01-04T17:56:23 IST" name="verifyStylePropertyOfNewButton" description="new button test case" finished-at="2023-01-04T17:56:27 IST" duration-ms="4349" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyStylePropertyOfNewButton -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManageDeliveryBoyTestCase@31c88ec8]" started-at="2023-01-04T17:56:27 IST" name="afterMethod" finished-at="2023-01-04T17:56:44 IST" duration-ms="16262" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyStylePropertyOfNewButton status=SUCCESS method=ManageDeliveryBoyTestCase.verifyStylePropertyOfNewButton()[pri:2, instance:testCases.ManageDeliveryBoyTestCase@31c88ec8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.ManageDeliveryBoyTestCase@31c88ec8]" started-at="2023-01-04T17:56:44 IST" name="beforeMethod" finished-at="2023-01-04T17:56:47 IST" duration-ms="3495" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifySearchButtonIsClickable()[pri:3, instance:testCases.ManageDeliveryBoyTestCase@31c88ec8]" started-at="2023-01-04T17:56:47 IST" name="verifySearchButtonIsClickable" description="search button test case" finished-at="2023-01-04T17:56:52 IST" duration-ms="4366" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearchButtonIsClickable -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManageDeliveryBoyTestCase@31c88ec8]" started-at="2023-01-04T17:56:52 IST" name="afterMethod" finished-at="2023-01-04T17:57:08 IST" duration-ms="16203" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySearchButtonIsClickable status=SUCCESS method=ManageDeliveryBoyTestCase.verifySearchButtonIsClickable()[pri:3, instance:testCases.ManageDeliveryBoyTestCase@31c88ec8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testCases.ManageDeliveryBoyTestCase -->
      <class name="testCases.ManageOrdersTestCase">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.ManageOrdersTestCase@3daa422a]" started-at="2023-01-04T17:53:47 IST" name="beforeMethod" finished-at="2023-01-04T17:53:49 IST" duration-ms="1826" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheChangeDeliveryDateOfSearchedOrder()[pri:0, instance:testCases.ManageOrdersTestCase@3daa422a]" started-at="2023-01-04T17:53:49 IST" name="verifyTheChangeDeliveryDateOfSearchedOrder" finished-at="2023-01-04T17:53:59 IST" duration-ms="10064" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheChangeDeliveryDateOfSearchedOrder -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManageOrdersTestCase@3daa422a]" started-at="2023-01-04T17:53:59 IST" name="afterMethod" finished-at="2023-01-04T17:54:15 IST" duration-ms="16255" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheChangeDeliveryDateOfSearchedOrder status=SUCCESS method=ManageOrdersTestCase.verifyTheChangeDeliveryDateOfSearchedOrder()[pri:0, instance:testCases.ManageOrdersTestCase@3daa422a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.ManageOrdersTestCase@3daa422a]" started-at="2023-01-04T17:54:15 IST" name="beforeMethod" finished-at="2023-01-04T17:54:17 IST" duration-ms="1942" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyThePaymentModeAndOrderId()[pri:0, instance:testCases.ManageOrdersTestCase@3daa422a]" started-at="2023-01-04T17:54:17 IST" name="verifyThePaymentModeAndOrderId" finished-at="2023-01-04T17:54:20 IST" duration-ms="2561" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyThePaymentModeAndOrderId -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManageOrdersTestCase@3daa422a]" started-at="2023-01-04T17:54:20 IST" name="afterMethod" finished-at="2023-01-04T17:54:36 IST" duration-ms="16260" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyThePaymentModeAndOrderId status=SUCCESS method=ManageOrdersTestCase.verifyThePaymentModeAndOrderId()[pri:0, instance:testCases.ManageOrdersTestCase@3daa422a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.ManageOrdersTestCase@3daa422a]" started-at="2023-01-04T17:54:36 IST" name="beforeMethod" finished-at="2023-01-04T17:54:38 IST" duration-ms="1723" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyThePaymentModeIsBank()[pri:0, instance:testCases.ManageOrdersTestCase@3daa422a]" started-at="2023-01-04T17:54:38 IST" name="verifyThePaymentModeIsBank" finished-at="2023-01-04T17:54:41 IST" duration-ms="2957" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyThePaymentModeIsBank -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManageOrdersTestCase@3daa422a]" started-at="2023-01-04T17:54:41 IST" name="afterMethod" finished-at="2023-01-04T17:54:57 IST" duration-ms="16255" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyThePaymentModeIsBank status=SUCCESS method=ManageOrdersTestCase.verifyThePaymentModeIsBank()[pri:0, instance:testCases.ManageOrdersTestCase@3daa422a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.ManageOrdersTestCase@3daa422a]" started-at="2023-01-04T17:54:57 IST" name="beforeMethod" finished-at="2023-01-04T17:54:59 IST" duration-ms="1868" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheSearchOfExistingOrder()[pri:0, instance:testCases.ManageOrdersTestCase@3daa422a]" started-at="2023-01-04T17:54:59 IST" name="verifyTheSearchOfExistingOrder" finished-at="2023-01-04T17:55:01 IST" duration-ms="2372" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheSearchOfExistingOrder -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManageOrdersTestCase@3daa422a]" started-at="2023-01-04T17:55:01 IST" name="afterMethod" finished-at="2023-01-04T17:55:18 IST" duration-ms="16255" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheSearchOfExistingOrder status=SUCCESS method=ManageOrdersTestCase.verifyTheSearchOfExistingOrder()[pri:0, instance:testCases.ManageOrdersTestCase@3daa422a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.ManageOrdersTestCase@3daa422a]" started-at="2023-01-04T17:55:18 IST" name="beforeMethod" finished-at="2023-01-04T17:55:20 IST" duration-ms="2183" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheSearchOfNonExistingOrder()[pri:0, instance:testCases.ManageOrdersTestCase@3daa422a]" started-at="2023-01-04T17:55:20 IST" name="verifyTheSearchOfNonExistingOrder" finished-at="2023-01-04T17:55:22 IST" duration-ms="2536" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheSearchOfNonExistingOrder -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManageOrdersTestCase@3daa422a]" started-at="2023-01-04T17:55:22 IST" name="afterMethod" finished-at="2023-01-04T17:55:39 IST" duration-ms="16255" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheSearchOfNonExistingOrder status=SUCCESS method=ManageOrdersTestCase.verifyTheSearchOfNonExistingOrder()[pri:0, instance:testCases.ManageOrdersTestCase@3daa422a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.ManageOrdersTestCase@3daa422a]" started-at="2023-01-04T17:55:39 IST" name="beforeMethod" finished-at="2023-01-04T17:55:40 IST" duration-ms="1710" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheValuesOfStatusInSearchOrder()[pri:0, instance:testCases.ManageOrdersTestCase@3daa422a]" started-at="2023-01-04T17:55:40 IST" name="verifyTheValuesOfStatusInSearchOrder" finished-at="2023-01-04T17:55:42 IST" duration-ms="1768" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheValuesOfStatusInSearchOrder -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManageOrdersTestCase@3daa422a]" started-at="2023-01-04T17:55:42 IST" name="afterMethod" finished-at="2023-01-04T17:55:58 IST" duration-ms="16242" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheValuesOfStatusInSearchOrder status=SUCCESS method=ManageOrdersTestCase.verifyTheValuesOfStatusInSearchOrder()[pri:0, instance:testCases.ManageOrdersTestCase@3daa422a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testCases.ManageOrdersTestCase -->
      <class name="testCases.PushNotificationTestCase">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.PushNotificationTestCase@481a996b]" started-at="2023-01-04T17:58:19 IST" name="beforeMethod" finished-at="2023-01-04T17:58:21 IST" duration-ms="2218" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheAlertText()[pri:0, instance:testCases.PushNotificationTestCase@481a996b]" started-at="2023-01-04T17:58:21 IST" name="verifyTheAlertText" finished-at="2023-01-04T17:58:24 IST" duration-ms="2764" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheAlertText -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.PushNotificationTestCase@481a996b]" started-at="2023-01-04T17:58:24 IST" name="afterMethod" finished-at="2023-01-04T17:58:40 IST" duration-ms="16259" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheAlertText status=SUCCESS method=PushNotificationTestCase.verifyTheAlertText()[pri:0, instance:testCases.PushNotificationTestCase@481a996b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.PushNotificationTestCase@481a996b]" started-at="2023-01-04T17:58:40 IST" name="beforeMethod" finished-at="2023-01-04T17:58:42 IST" duration-ms="2691" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheBackgroundColorOfAlert()[pri:0, instance:testCases.PushNotificationTestCase@481a996b]" started-at="2023-01-04T17:58:42 IST" name="verifyTheBackgroundColorOfAlert" finished-at="2023-01-04T17:58:45 IST" duration-ms="2574" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheBackgroundColorOfAlert -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.PushNotificationTestCase@481a996b]" started-at="2023-01-04T17:58:45 IST" name="afterMethod" finished-at="2023-01-04T17:59:01 IST" duration-ms="16250" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheBackgroundColorOfAlert status=SUCCESS method=PushNotificationTestCase.verifyTheBackgroundColorOfAlert()[pri:0, instance:testCases.PushNotificationTestCase@481a996b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.PushNotificationTestCase@481a996b]" started-at="2023-01-04T17:59:01 IST" name="beforeMethod" finished-at="2023-01-04T17:59:05 IST" duration-ms="3420" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheColorOfMandatorySymbolOfTitle()[pri:0, instance:testCases.PushNotificationTestCase@481a996b]" started-at="2023-01-04T17:59:05 IST" name="verifyTheColorOfMandatorySymbolOfTitle" finished-at="2023-01-04T17:59:06 IST" duration-ms="1606" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheColorOfMandatorySymbolOfTitle -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.PushNotificationTestCase@481a996b]" started-at="2023-01-04T17:59:06 IST" name="afterMethod" finished-at="2023-01-04T17:59:06 IST" duration-ms="124" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheColorOfMandatorySymbolOfTitle status=SUCCESS method=PushNotificationTestCase.verifyTheColorOfMandatorySymbolOfTitle()[pri:0, instance:testCases.PushNotificationTestCase@481a996b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.PushNotificationTestCase@481a996b]" started-at="2023-01-04T17:59:06 IST" name="beforeMethod" finished-at="2023-01-04T17:59:09 IST" duration-ms="2327" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheColorOfSendButton()[pri:0, instance:testCases.PushNotificationTestCase@481a996b]" started-at="2023-01-04T17:59:09 IST" name="verifyTheColorOfSendButton" finished-at="2023-01-04T17:59:10 IST" duration-ms="1246" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheColorOfSendButton -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.PushNotificationTestCase@481a996b]" started-at="2023-01-04T17:59:10 IST" name="afterMethod" finished-at="2023-01-04T17:59:10 IST" duration-ms="134" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheColorOfSendButton status=SUCCESS method=PushNotificationTestCase.verifyTheColorOfSendButton()[pri:0, instance:testCases.PushNotificationTestCase@481a996b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.PushNotificationTestCase@481a996b]" started-at="2023-01-04T17:59:10 IST" name="beforeMethod" finished-at="2023-01-04T17:59:12 IST" duration-ms="2224" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheTitleOfPushNotification()[pri:0, instance:testCases.PushNotificationTestCase@481a996b]" started-at="2023-01-04T17:59:12 IST" name="verifyTheTitleOfPushNotification" finished-at="2023-01-04T17:59:14 IST" duration-ms="1789" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheTitleOfPushNotification -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.PushNotificationTestCase@481a996b]" started-at="2023-01-04T17:59:14 IST" name="afterMethod" finished-at="2023-01-04T17:59:14 IST" duration-ms="130" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheTitleOfPushNotification status=SUCCESS method=PushNotificationTestCase.verifyTheTitleOfPushNotification()[pri:0, instance:testCases.PushNotificationTestCase@481a996b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testCases.PushNotificationTestCase -->
      <class name="testCases.DashboardTestCase">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.DashboardTestCase@39529185]" started-at="2023-01-04T17:51:31 IST" name="beforeMethod" finished-at="2023-01-04T17:51:33 IST" duration-ms="1722" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="homeStyleValidation()[pri:0, instance:testCases.DashboardTestCase@39529185]" started-at="2023-01-04T17:51:33 IST" name="homeStyleValidation" finished-at="2023-01-04T17:51:34 IST" duration-ms="673" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- homeStyleValidation -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.DashboardTestCase@39529185]" started-at="2023-01-04T17:51:34 IST" name="afterMethod" finished-at="2023-01-04T17:51:50 IST" duration-ms="16266" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=homeStyleValidation status=SUCCESS method=DashboardTestCase.homeStyleValidation()[pri:0, instance:testCases.DashboardTestCase@39529185] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.DashboardTestCase@39529185]" started-at="2023-01-04T17:51:50 IST" name="beforeMethod" finished-at="2023-01-04T17:51:52 IST" duration-ms="1964" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTextOfManageExpenses()[pri:0, instance:testCases.DashboardTestCase@39529185]" started-at="2023-01-04T17:51:52 IST" name="verifyTextOfManageExpenses" finished-at="2023-01-04T17:51:53 IST" duration-ms="686" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTextOfManageExpenses -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.DashboardTestCase@39529185]" started-at="2023-01-04T17:51:53 IST" name="afterMethod" finished-at="2023-01-04T17:52:09 IST" duration-ms="16234" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTextOfManageExpenses status=SUCCESS method=DashboardTestCase.verifyTextOfManageExpenses()[pri:0, instance:testCases.DashboardTestCase@39529185] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.DashboardTestCase@39529185]" started-at="2023-01-04T17:52:09 IST" name="beforeMethod" finished-at="2023-01-04T17:52:11 IST" duration-ms="1980" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTextOfManageUsers()[pri:0, instance:testCases.DashboardTestCase@39529185]" started-at="2023-01-04T17:52:11 IST" name="verifyTextOfManageUsers" finished-at="2023-01-04T17:52:12 IST" duration-ms="777" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTextOfManageUsers -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.DashboardTestCase@39529185]" started-at="2023-01-04T17:52:12 IST" name="afterMethod" finished-at="2023-01-04T17:52:12 IST" duration-ms="103" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTextOfManageUsers status=SUCCESS method=DashboardTestCase.verifyTextOfManageUsers()[pri:0, instance:testCases.DashboardTestCase@39529185] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testCases.DashboardTestCase -->
      <class name="testCases.AdminUsersTestCase">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.AdminUsersTestCase@3d51f06e]" started-at="2023-01-04T17:59:14 IST" name="beforeMethod" finished-at="2023-01-04T17:59:17 IST" duration-ms="2317" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyIfTheExistingAdminUserIsAbleToCreateOrNot()[pri:0, instance:testCases.AdminUsersTestCase@3d51f06e]" started-at="2023-01-04T17:59:17 IST" name="verifyIfTheExistingAdminUserIsAbleToCreateOrNot" finished-at="2023-01-04T17:59:19 IST" duration-ms="2145" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIfTheExistingAdminUserIsAbleToCreateOrNot -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.AdminUsersTestCase@3d51f06e]" started-at="2023-01-04T17:59:19 IST" name="afterMethod" finished-at="2023-01-04T17:59:35 IST" duration-ms="16228" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyIfTheExistingAdminUserIsAbleToCreateOrNot status=SUCCESS method=AdminUsersTestCase.verifyIfTheExistingAdminUserIsAbleToCreateOrNot()[pri:0, instance:testCases.AdminUsersTestCase@3d51f06e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.AdminUsersTestCase@3d51f06e]" started-at="2023-01-04T17:59:35 IST" name="beforeMethod" finished-at="2023-01-04T17:59:45 IST" duration-ms="10194" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheAdminUserIsAbleToCreate()[pri:0, instance:testCases.AdminUsersTestCase@3d51f06e]" started-at="2023-01-04T17:59:45 IST" name="verifyTheAdminUserIsAbleToCreate" finished-at="2023-01-04T17:59:50 IST" duration-ms="4437" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheAdminUserIsAbleToCreate -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.AdminUsersTestCase@3d51f06e]" started-at="2023-01-04T17:59:50 IST" name="afterMethod" finished-at="2023-01-04T18:00:06 IST" duration-ms="16249" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheAdminUserIsAbleToCreate status=SUCCESS method=AdminUsersTestCase.verifyTheAdminUserIsAbleToCreate()[pri:0, instance:testCases.AdminUsersTestCase@3d51f06e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.AdminUsersTestCase@3d51f06e]" started-at="2023-01-04T18:00:06 IST" name="beforeMethod" finished-at="2023-01-04T18:00:08 IST" duration-ms="1667" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheSearchOfExistingAdminUser()[pri:0, instance:testCases.AdminUsersTestCase@3d51f06e]" started-at="2023-01-04T18:00:08 IST" name="verifyTheSearchOfExistingAdminUser" finished-at="2023-01-04T18:00:10 IST" duration-ms="2079" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheSearchOfExistingAdminUser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.AdminUsersTestCase@3d51f06e]" started-at="2023-01-04T18:00:10 IST" name="afterMethod" finished-at="2023-01-04T18:00:26 IST" duration-ms="16270" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheSearchOfExistingAdminUser status=SUCCESS method=AdminUsersTestCase.verifyTheSearchOfExistingAdminUser()[pri:0, instance:testCases.AdminUsersTestCase@3d51f06e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testCases.AdminUsersTestCase -->
    </test> <!-- MyTestName -->
  </suite> <!-- My Extent Report Suite -->
</testng-results>
